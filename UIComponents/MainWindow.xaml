<Window x:Class="Projekt1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:icon="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
        xmlns:local="clr-namespace:Projekt1"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowState="Maximized"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        BorderBrush="Transparent"
        Margin="5"
        Title="MainWindow" 
        Name="MainWind"
        Closed="Window_Closed" 
        Width="{x:Static SystemParameters.PrimaryScreenWidth}"  
        Height="{x:Static SystemParameters.PrimaryScreenHeight}"  
        FontFamily="Arial Bold"
        FontSize="16"
        FontWeight="Bold"
        
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="btov"/>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="black" Offset="0.0"/>
            <GradientStop Color="#FF333333" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF333333" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF333333"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="black" Offset="0.0"/>
            <GradientStop Color="#FF333333" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="black" Offset="0.0"/>
            <GradientStop Color="#FF333333" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF333333"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="black" Offset="0.0"/>
            <GradientStop Color="#FF333333" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Name="Login" Panel.ZIndex="1" Grid.Column="1" Grid.Row="1">
            <Border BorderBrush="Black" BorderThickness="2" CornerRadius="5">
                <Border.Background>
                    <SolidColorBrush Color="Aqua"/>
                </Border.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="{Binding SelectedLang.LoginBtn_Text}" FontSize="56" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Label Content="{Binding SelectedLang.LoginWin_UsrNameLbl}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                        </Viewbox>
                        <TextBox Grid.Column="2" Name="usTbx" VerticalAlignment="Center" HorizontalAlignment="Left" MinWidth="250" MinHeight="40"/>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Label Content="{Binding SelectedLang.LoginWin_PasswordLbl}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Viewbox>
                        <TextBox Grid.Column="2" Name="pwTbx" VerticalAlignment="Center" HorizontalAlignment="Left" MinWidth="250" MinHeight="40"/>

                    </Grid>
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Button Background="Transparent" Click="loginUsrClick">
                                <Border Background="Chartreuse" BorderBrush="Black">
                                    <Label Content="{Binding SelectedLang.LoginBtn_Text}"/>
                                </Border>
                            </Button>
                        </Viewbox>
                        <Viewbox Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Button Background="Transparent" Click="CancelLoginClick">
                                <Border Background="Red" BorderBrush="Black">
                                    <Label Content="{Binding SelectedLang.CancelBtnTxt}"/>
                                </Border>
                            </Button>
                        </Viewbox>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        <Grid Name="MainGrid" Background="#FF1F1F1F" 
              Grid.ColumnSpan="3" Grid.RowSpan="3"        
              IsEnabled="False"
          Width="{x:Static SystemParameters.PrimaryScreenWidth}"  
          Height="{x:Static SystemParameters.PrimaryScreenHeight}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="c1" Width="65*"/>
            <ColumnDefinition Name="c2" Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Name="r1" Height="*"/>
            <RowDefinition Name="r2" Height="40*"/>
        </Grid.RowDefinitions>
        <Button Grid.Row="0" Grid.Column="1"
                Panel.ZIndex="1"
                Margin="0 -3 0 0"
                Padding="0 -3 3 0"
                Height="{Binding Height, ElementName=c1}" 
                Width="{Binding Height, ElementName=c1}"
                Content="X"
                Foreground="{StaticResource ResourceKey=fontColor}"
                Click="close_window"/>
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="7*"/>
            </Grid.ColumnDefinitions>
            <!--SidePanel-->
            <Border Name="sidePanel" Grid.Column="0" Background="#FF333333" Margin="2 2 0 8">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Name ="r3" Height="*"/>
                        <RowDefinition Name="r4" Height="30*"/>
                    </Grid.RowDefinitions>
                    <Label Content="Projekt1" Grid.Row="0" Padding="0" Margin="0"
                           Foreground="{StaticResource ResourceKey=fontColor}" 
                           HorizontalContentAlignment="Center" 
                           VerticalContentAlignment="Center"/>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Viewbox Grid.Row="0" Margin="0 -20">
                            <local:TimeAndDateControl x:Name="clockComponent" Grid.Column="0" Grid.Row="2" 
                                      Background="#FF333333"
                                      VerticalAlignment="Center" 
			                          HorizontalAlignment="Center" 
			                          Margin="3"
                                      ownerMW="{Binding ElementName=MainWind}"/>
                        </Viewbox>
                        <Button Grid.Row="1" Margin="0 1" Click="home_button_click">
                            <Viewbox>
                                <StackPanel Orientation="Horizontal">
                                    <icon:MaterialIcon  Kind="Home"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label Content="{Binding SelectedLang.HomeBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </StackPanel>
                            </Viewbox>
                        </Button>
                        <Button Grid.Row="2" Margin="0 1" Click="stats_button_click">
                            <Viewbox>
                                <DockPanel Width="{Binding Width, ElementName=sidePanel}">
                                    <icon:MaterialIcon DockPanel.Dock="Left" Kind="ChartBar"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label DockPanel.Dock="Right" Content="{Binding SelectedLang.StatsBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </DockPanel>
                            </Viewbox>
                        </Button>
                        <Button Name="deviceBtn" Grid.Row="3" Margin="0 1" Click="device_button_click">
                            <Viewbox>
                                <DockPanel Width="{Binding Width, ElementName=sidePanel}">
                                    <icon:MaterialIcon DockPanel.Dock="Left" Kind="Smartphone"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label DockPanel.Dock="Right" Margin="0" Content="{Binding SelectedLang.DevicesBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </DockPanel>
                            </Viewbox>
                        </Button>
                        <Button Grid.Row="4" Margin="0 1" Click="alarms_button_click">
                            <Viewbox>
                                <DockPanel Width="{Binding Width, ElementName=sidePanel}">
                                    <icon:MaterialIcon DockPanel.Dock="Left" Kind="BellAlert"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label DockPanel.Dock="Right" Margin="0" Content="{Binding SelectedLang.AlarmsBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </DockPanel>
                            </Viewbox>
                        </Button>
                        <Button Name="settingsBtn" Grid.Row="5" Margin="0 1" Click="settings_button_click">
                            <Viewbox>
                                <DockPanel Width="{Binding Width, ElementName=sidePanel}">
                                    <icon:MaterialIcon DockPanel.Dock="Left" Kind="Gear"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label DockPanel.Dock="Right" Margin="0" Content="{Binding SelectedLang.SettingsBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </DockPanel>
                            </Viewbox>
                        </Button>
                        <Button Name="calibBtn" Grid.Row="6" Margin="0 1" Click="calib_button_click">
                            <Viewbox>
                                <DockPanel Width="{Binding Width, ElementName=sidePanel}">
                                    <icon:MaterialIcon DockPanel.Dock="Left" Kind="Toolbox"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label DockPanel.Dock="Right" Margin="0" Content="{Binding SelectedLang.CalibBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </DockPanel>
                            </Viewbox>
                        </Button>
                        <Button Name="pmBtn" Grid.Row="7" Margin="0 1" Click="PM_button_click">
                            <Viewbox>
                                <DockPanel Width="{Binding Width, ElementName=sidePanel}">
                                    <icon:MaterialIcon DockPanel.Dock="Left" Kind="HammerScrewdriver"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label DockPanel.Dock="Right" Margin="0" Content="{Binding SelectedLang.PMBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </DockPanel>
                            </Viewbox>
                        </Button>
                        <Button Name="serverBtn" Grid.Row="8" Margin="0 1" Click="server_button_click">
                            <Viewbox>
                                <DockPanel Width="{Binding Width, ElementName=sidePanel}">
                                    <icon:MaterialIcon DockPanel.Dock="Left" Kind="ComputerClassic"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                      VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                      Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label DockPanel.Dock="Right" Margin="0" Content="{Binding SelectedLang.ServerBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                </DockPanel>
                            </Viewbox>
                        </Button>
                        <Button Grid.Row="10" Margin="0 1" Click="loginOut_Click">
                            <Viewbox>
                                <StackPanel Orientation="Horizontal">
                                    <icon:MaterialIcon  Kind="Key"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                    Margin="0" Padding="0" Foreground="{StaticResource fontColor}"/>
                                    <Label Name="loginLbl" Content="{Binding SelectedLang.LoginBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Visibility="Visible"/>
                                    <Label Name="logoutLbl" Content="{Binding SelectedLang.LogoutBtn_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Visibility="Collapsed"/>
                                </StackPanel>
                            </Viewbox>
                        </Button>
                        <Viewbox Grid.Row="11" Margin="0 1" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding SelectedLang.Languages_Text}" Foreground="{StaticResource fontColor}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"/>
                                <ComboBox Template="{DynamicResource ComboBoxTemplate1}" 
                                          Style="{DynamicResource ComboBoxStyle1}" 
                                          ItemsSource="{Binding AvailLangs}" 
                                          SelectedItem="{Binding SelectedCulture}"
                                          SelectionChanged="ComboBox_SelectionChanged" 
                                          VerticalAlignment="Center" HorizontalAlignment="Center" 
                                          Foreground="{StaticResource fontColor}"/>
                            </StackPanel>
                        </Viewbox>

                    </Grid>
                </Grid>
            </Border>
             <Grid Name="Presentor_Grid" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        </Grid>
    </Grid>        
    </Grid>
</Window>
